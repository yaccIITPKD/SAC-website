# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/backend/

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './src/backend/package-lock.json'
    - name: Add secrets to Node.js environment
      env:
        PGHOST: ${{ secrets.PGHOST }}
        PGDATABASE: ${{ secrets.PGDATABASE }}
        PGUSER: ${{ secrets.PGUSER }}
        PGPASSWORD: ${{ secrets.PGPASSWORD }}
        ENDPOINT_ID: ${{ secrets.ENDPOINT_ID }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      run: |
        echo "PGHOST=$PGHOST" >> .env
        echo "PGDATABASE=$PGDATABASE" >> .env
        echo "PGUSER=$PGUSER" >> .env
        echo "PGPASSWORD=$PGPASSWORD" >> .env
        echo "ENDPOINT_ID=$ENDPOINT_ID" >> .env
        echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> .env
        echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .env
    - run: npm ci
    - name: Test npm run with timeout
      run: |
        timeout --preserve-status 60s npm run start
      env:
        CI: true
    # - run: npm start
    # - run: npm test
